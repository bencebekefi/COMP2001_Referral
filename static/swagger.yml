openapi: 3.0.0
info:
  title: Trails API
  description: An API to manage trails, features, activities, and comments, with user authentication and role-based access.
  version: "2.0.0"

servers:
  - url: http://127.0.0.1:5000
    description: Local server

paths:
  /login:
    post:
      summary: Authenticate a user
      description: Login using email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "grace@plymouth.ac.uk"
                password:
                  type: string
                  example: "ISAD123!"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  username:
                    type: string
                  role:
                    type: string
        "401":
          description: Invalid credentials

  /logout:
    post:
      summary: Logout current session
      responses:
        "200":
          description: Logout successful
        "500":
          description: Internal error

  /trails:
    get:
      summary: Get all trails
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Trails retrieved

    post:
      summary: Create a new trail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        "201":
          description: Trail created
        "403":
          description: Forbidden

  /trails/{trail_id}:
    parameters:
      - in: path
        name: trail_id
        required: true
        schema:
          type: integer

    get:
      summary: Get trail by ID
      responses:
        "200":
          description: Trail retrieved
        "404":
          description: Not found

    put:
      summary: Update a trail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trail'
      responses:
        "200":
          description: Trail updated
        "403":
          description: Forbidden

    delete:
      summary: Delete a trail
      responses:
        "200":
          description: Trail deleted
        "403":
          description: Forbidden

  /trails/{trail_id}/comments:
    get:
      summary: Get comments for a trail
      parameters:
        - in: path
          name: trail_id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Comments fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

    post:
      summary: Add a comment to a trail
      parameters:
        - in: path
          name: trail_id
          required: true
          schema:
            type: integer
          description: The ID of the trail to comment on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewComment'
      responses:
        "201":
          description: Comment added
        "401":
          description: Unauthorized

  /comments:
    get:
      summary: Get all comments
      description: Retrieve a list of all comments across all trails.
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'

  /comments/{comment_id}:
    parameters:
      - in: path
        name: comment_id
        required: true
        schema:
          type: integer

    put:
      summary: Edit a comment
      description: Only the user who posted the comment can edit it
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CommentText:
                  type: string
      responses:
        "200":
          description: Comment updated
        "403":
          description: Forbidden
        "404":
          description: Comment not found

    delete:
      summary: Archive a comment
      description: Only admins can delete comments (set as archived)
      responses:
        "200":
          description: Comment archived
        "403":
          description: Forbidden
        "404":
          description: Comment not found

components:
  schemas:
    Trail:
      type: object
      properties:
        TrailName:
          type: string
        TrailRating:
          type: number
        TrailDifficulty:
          type: string
        TrailDistance:
          type: number
        TrailEstTime:
          type: string
        TrailRouteType:
          type: string
        TrailDescription:
          type: string
        LocationID:
          type: integer

    Comment:
      type: object
      properties:
        CommentID:
          type: integer
        TrailID:
          type: integer
        UserID:
          type: integer
        CommentText:
          type: string
        CommentDate:
          type: string
          format: date-time
        IsArchived:
          type: boolean

    NewComment:
      type: object
      required:
        - CommentText
      properties:
        CommentText:
          type: string
          example: "Beautiful views and peaceful forest!"
